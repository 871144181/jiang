{
    "version": "https://jsonfeed.org/version/1",
    "title": "小姜天堂 • All posts by \"ctf\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/09/09/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%B8%97%E9%80%8F%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1/",
            "url": "http://example.com/2020/09/09/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%B8%97%E9%80%8F%E6%94%BB%E5%87%BB%E5%8F%8A%E9%98%B2%E5%BE%A1/",
            "title": "文件上传渗透攻击及防御",
            "date_published": "2020-09-09T10:56:49.000Z",
            "content_html": "<h2 id=\"文件上传漏洞原理\"><a class=\"anchor\" href=\"#文件上传漏洞原理\">#</a> 文件上传漏洞原理</h2>\n<h4 id=\"实验环境\"><a class=\"anchor\" href=\"#实验环境\">#</a> 实验环境：</h4>\n<p>目标靶机：OWASP_Broken_Web_Apps_VM_1.2</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvb3dhc3Bid2EvZmlsZXMvMS4yL09XQVNQX0Jyb2tlbl9XZWJfQXBwc19WTV8xLjIuN3ovZG93bmxvYWQ=\">https://sourceforge.net/projects/owaspbwa/files/1.2/OWASP_Broken_Web_Apps_VM_1.2.7z/download</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>OWASP Broken Web Applications Project</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Broken Web Applications<span class=\"token punctuation\">(</span>BWA<span class=\"token punctuation\">)</span> 项目生成一个虚拟机，运行各种具有已知漏洞的应用程序，供以下人员使用：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>- 了解Web应用程序安全性</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>- 测试手册评估技术</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>- 测试自动化工具</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- 测试源代码分析工具</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- 观察网络攻击</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>- 测试WAF和类似的代码技术</pre></td></tr></table></figure><p>测试渗透机：Kali-Linux</p>\n<h4 id=\"实验原理\"><a class=\"anchor\" href=\"#实验原理\">#</a> 实验原理：</h4>\n<p><img data-src=\"http://wx3.sinaimg.cn/large/006skPSVly1gilbkltol6j30dq04qq41.jpg\" alt=\"image-20200909210657223\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>、文件上传<span class=\"token punctuation\">(</span>File Upload ）是大部分webl应用都具备的功能，例如用户上传阳件、修改头像、分享图片/视频等</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2</span>正常的文件一船是义档、图片、视频等，wMeb应用收集之后战入后台存储，需要的时候再调用出来返回</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3</span>、如果恶意文件如PHP、ASP等执行文件绕过web应用，并藏利执行，则相当于黑客直接拿到了webshell</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">4</span>、一旦黑客拿到Mebshell，则可以拿至Mebsi用8款据，制除web文件，本地提权，进一步拿下整个苇务器甚至内网</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">5</span>、SQL注入攻击的对象是数据库服务，文件上传漏洞主要攻击wleb版务，实际渗透两利相合，达到对目标的深度控制</pre></td></tr></table></figure><h4 id=\"实验过程\"><a class=\"anchor\" href=\"#实验过程\">#</a> 实验过程：</h4>\n<h5 id=\"实验一\"><a class=\"anchor\" href=\"#实验一\">#</a> 实验一：</h5>\n<p>通过 DVWA 中 low 难度的文件上传漏洞获得 shell</p>\n<p>运行靶机 OWASP_Broken_Web_Apps_VM_1.2</p>\n<p><img data-src=\"http://wx2.sinaimg.cn/large/006skPSVly1gilbkmcskzj30i408w0sq.jpg\" alt=\"image-20200910093745711\" /></p>\n<p>根据上方提示 username=root and password = owaspbwa 登录</p>\n<p>打开谷歌浏览器访问上方提示 IP 连接</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguNzMuMjMw\">http://192.168.73.230</span></p>\n<p><img data-src=\"http://wx2.sinaimg.cn/large/006skPSVly1gilblqce4aj31hc0r0adj.jpg\" alt=\"image-20200910094053721\" /></p>\n<p>点击 Damn Vulnerable Web Application</p>\n<p>用户名密码均为 admin</p>\n<p><img data-src=\"http://wx2.sinaimg.cn/large/006skPSVly1gilbknxgo6j31hc0rnn0k.jpg\" alt=\"image-20200910094207181\" /></p>\n<p>打开 Upload 测试文件上传</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910095925519.png\" alt=\"image-20200910095925519\" /></p>\n<p>选择冰蝎中的 shell.php 文件进行上传</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910100336147.png\" alt=\"image-20200910100336147\" /></p>\n<p>打开冰蝎 2.0 新增连接</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910100505046.png\" alt=\"image-20200910100505046\" /></p>\n<p>点击保存，双击运行即可发现已成功</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910100611806.png\" alt=\"image-20200910100611806\" /></p>\n<h5 id=\"实验二\"><a class=\"anchor\" href=\"#实验二\">#</a> 实验二：</h5>\n<p>通过 DVWA 中 medium 难度的文件上传漏洞获得 shell</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910100912878.png\" alt=\"image-20200910100912878\" /></p>\n<p>通过此处将难度改为 medium</p>\n<p>再次进行 Upload 操作</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910101005019.png\" alt=\"image-20200910101005019\" /></p>\n<p>发现上传 shell.php 失败</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910101050300.png\" alt=\"image-20200910101050300\" /></p>\n<p>点击下方查看源码发现上传进行了过滤</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910101139696.png\" alt=\"image-20200910101139696\" /></p>\n<p>我们可以通过 BP 来拦截请求进行绕过</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910102133228.png\" alt=\"image-20200910102133228\" /></p>\n<p>抓到上传的请求包将 Content-Type 改成 image/jpeg</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910102241997.png\" alt=\"image-20200910102241997\" /></p>\n<p>即可完成绕过</p>\n<p>运用冰蝎连接 shell.php 获得 shell</p>\n<p><img data-src=\"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200910102628120.png\" alt=\"image-20200910102628120\" /></p>\n",
            "tags": []
        }
    ]
}